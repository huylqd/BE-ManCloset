import nodemailer from "nodemailer";
import dotenv from "dotenv";
import axios from "axios";

dotenv.config();

export const FormMail = (name, email, description) => {
    return /*html*/ `
        <div style="margin: 5px auto 5px; padding: 5px; max-width: 600px; background: linear-gradient(to left,#7347c1,#0674ec); border: 5px solid transparent; background-repeat: no-repeat; background-origin: padding-box,border-box">
            <table cellpadding="0" cellspacing="0" border="0" align="center" style="background:white">
                <tbody>
                    <table cellpadding="0" cellspacing="0" border="0" align="center" width="600">
                        <tbody>
                            <tr>
                                <td width="100">&nbsp;</td>
                                <td width="400" align="center">
                                    <div align="left">
                                        <p>
                                            Xin ch√†o <b style="color:#0674ec">${name}</b>
                                            <div>&nbsp;</div>
                                            Email: <b style="color:#0674ec">${email}</b>
                                            <div>&nbsp;</div>
                                        
                                        </p>
                                    </div>
                                </td>
                                <td width="100">&nbsp;</td>
                            </tr>
                        </tbody>
                    </table>
                    <table cellpadding="0" cellspacing="0" border="0" align="center" width="600">
                        <tbody>
                            <tr>
                                <td width="200">&nbsp;</td>
                                <td width="200" align="center" style="padding-top:25px">
                                    <table cellpadding="0" cellspacing="0" border="0" align="center" width="400" height="50">
                                        <tbody>
                                            <tr>
                                                <td bgcolor="#0674ec" align="center" style="border-radius:4px" width="200" height="50">
                                                    ${description}
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </td>
                                <td width="200">&nbsp;</td>
                            </tr>
                        </tbody>
                    </table>
                </tbody>
                <div>&nbsp;</div>
                <div>&nbsp;</div>
            </table>
        </div>
    `;
}
export const FormMailOrder = (name, order) => {
    const api_web = process.env.WEB_URL;
    const api_url = process.env.API_URL;
    const api_order = `${api_url}/order/export/${order._id}`;

    return /*html*/ `
     <div style="max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ccc; border-radius: 5px; background-color: #f9f9f9;">
        <h1 style="color: #333;">C·∫£m ∆°n b·∫°n ƒë√£ mua h√†ng!</h1>
        <p style="color: #666;">Xin ch√†o ${name},</p>
        <p style="color: #666;">C·∫£m ∆°n b·∫°n ƒë√£ mua h√†ng t·∫°i c·ª≠a h√†ng ch√∫ng t√¥i. Ch√∫ng t√¥i r·∫•t tr√¢n tr·ªçng s·ª± ·ªßng h·ªô c·ªßa b·∫°n.</p>
        <p style="color: #666;">N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi ho·∫∑c y√™u c·∫ßu h·ªó tr·ª£ n√†o, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>

        <a href=${api_order} style="display: inline-block; padding: 10px 20px; text-decoration: none; color: #fff; background-color: #007bff; border-radius: 4px;">Click ƒë·ªÉ xem th√¥ng tin ƒë∆°n</a>
        <a href=${api_web} style="display: inline-block; padding: 10px 20px; text-decoration: none; color: #fff; background-color: #007bff; border-radius: 4px;">Truy c·∫≠p trang web c·ªßa ch√∫ng t√¥i</a>
        <p style="color: #666;">Tr√¢n tr·ªçng,</p>
        <p style="color: #666;">Man Closet</p>
    </div>
    `
}
export const FormPaid = (name, order) => {
    const api_web = process.env.WEB_URL;
    return /*html*/ `
     <div style="max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ccc; border-radius: 5px; background-color: #f9f9f9;">
        <h1 style="color: #333;">C·∫£m ∆°n b·∫°n ƒë√£ thanh to√°n ƒë∆°n h√†ng </h1>

        <p style="color: #666;">M√£ ƒë∆°n h√†ng: ${order._id}</p>
        <p style="color: #666;">Xin ch√†o ${name},</p>
        <p style="color: #666;">C·∫£m ∆°n b·∫°n ƒë√£ mua h√†ng t·∫°i c·ª≠a h√†ng ch√∫ng t√¥i. Ch√∫ng t√¥i r·∫•t tr√¢n tr·ªçng s·ª± ·ªßng h·ªô c·ªßa b·∫°n.</p>
        <p style="color: #666;">N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi ho·∫∑c y√™u c·∫ßu h·ªó tr·ª£ n√†o, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
        <a href=${api_web} style="display: inline-block; padding: 10px 20px; text-decoration: none; color: #fff; background-color: #007bff; border-radius: 4px;">Truy c·∫≠p trang web c·ªßa ch√∫ng t√¥i</a>
        <p style="color: #666;">Tr√¢n tr·ªçng,</p>
        <p style="color: #666;">Man Closet</p>
    </div>
    `
}
console.log('mail', process.env.PASS)
export const sendMailOpen = async (name, email) => {
    let transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 587,
        secure: false,
        auth: {
            user: process.env.MAIL,
            pass: process.env.PASS,
        },
    });
    const description = "Trong kho·∫£n th·ªùi gian ho·∫°t ƒë·ªông t√¥i th·∫•y b·∫°n c√≥ nh·ªØng h√†nh vi kh√¥ng t√≠nh c·ª±c nh·∫±m g√¢y kh√≥ ch·ªãu cho tr·∫£i nghi·ªám c·ªßa m·ªçi ng∆∞·ªùi n√™n ch√∫ng t√¥i quy·∫øt ƒë·ªãnh kh√≥a nich b·∫°n 3-4 ng√†y ch√∫c b·∫°n m·ªôt ng√†y m·ªõi vui v·∫ª !üòÄ"
    let info = await transporter.sendMail({

        from: "mancloset68@gmail.com",
        to: email,
        subject: "Th∆∞ kh√≥a nich b·∫°n !",
        text: "Ch√†o b·∫°n, " + email,
        html: `${FormMail(name, email, description)}`,
    });
};
export const sendMailClose = async (name, email) => {
    const description = "Th·ªùi gian kho√° 3-4 ng√†y ƒë√£ h·∫øt ch√∫c m·ª´ng b·∫°n ch√∫c b·∫°n ng√†y m·ªõi t·ªët l√†nh üòÅ"
    let transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 587,
        secure: false,
        auth: {
            user: process.env.MAIL,
            pass: process.env.PASS,
        },
    });

    let info = await transporter.sendMail({
        from: "mancloset68@gmail.com",
        to: email,
        subject: "Th∆∞ m·ªü kh√≥a nich b·∫°n !",
        text: "Ch√†o b·∫°n, " + email,
        html: `${FormMail(name, email, description)}`,
    });
};
export const sendMailPaid = async (name, email, order) => {
    let transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 587,
        secure: false,
        auth: {
            user: process.env.MAIL,
            pass: process.env.PASS,
        },
    });
    let info = await transporter.sendMail({

        from: "mancloset68@gmail.com",
        to: email,
        subject: "Th∆∞ c·∫£m ∆°n!",
        text: "Ch√†o b·∫°n, " + email,
        html: `${FormMailOrder(name, order)}`,
    });
}
export const sendMailOrder = async (name, email, order) => {
    let transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 587,
        secure: false,
        auth: {
            user: process.env.MAIL,
            pass: process.env.PASS,
        },
    });
    let info = await transporter.sendMail({

        from: "mancloset68@gmail.com",
        to: email,
        subject: "Th∆∞ c·∫£m ∆°n!",
        text: "Ch√†o b·∫°n, " + email,
        html: `${FormMailOrder(name, order)}`,
    });
}
export const FormMailForgot = (name, resetToken) => {
    const api_web = process.env.WEB_URL;
    const api_url = process.env.API_URL;
    const api_resetPassword = `${api_web}/auth/reset-password`;


    return /*html*/ `   
     <div style="max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ccc; border-radius: 5px; background-color: #f9f9f9;">
        <h1 style="color: #333;">L·∫•y l·∫°i m·∫≠t kh·∫©u</h1>
        <p style="color: #666;">Xin ch√†o ${name},</p>
        <p style="color: #666;">B·∫°n vui l√≤ng click v√† ƒë∆∞·ªùng d·∫´n b√™n d∆∞·ªõi ƒë·ªÉ l·∫•y l·∫°i m·∫≠t kh·∫©u.</p>
        <a href=${api_resetPassword} style="display: inline-block; padding: 10px 20px; text-decoration: none; color: #fff; background-color: #007bff; border-radius: 4px;">Click here</a>
        
        <p style="color: #666;">Tr√¢n tr·ªçng,</p>
        <p style="color: #666;">Man Closet</p>
    </div>
    `
}
export const sendMailForgotPassword = async (name, email, resetToken) => {
    let transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 587,
        secure: false,
        auth: {
            user: process.env.MAIL,
            pass: process.env.PASS,
        },
    });
    let info = await transporter.sendMail({

        from: "mancloset68@gmail.com",
        to: email,
        subject: "Th∆∞ l·∫•y l·∫°i m·∫≠t kh·∫©u",
        text: "Ch√†o b·∫°n, " + email,
        html: `${FormMailForgot(name, resetToken)}`,
    });
}




export const FormMailPasword = (name, password:string) => {
    const api_web = process.env.WEB_URL;
    const api_url = process.env.API_URL;


    return /*html*/ `   
     <div style="max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ccc; border-radius: 5px; background-color: #f9f9f9;">
        <h1 style="color: #333;">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u th√†nh c√¥ng</h1>
        <p style="color: #666;">Xin ch√†o ${name},</p>
        <p style="color: #666;">ƒê√¢y l√† m·∫≠t kh·∫©u c·ªßa b·∫°n. ƒê·ª´ng bao gi·ªù qu√™n m·∫≠t kh·∫©u n·ªØa nh√©: ${password}</p>
       
        <a href=${api_web} style="display: inline-block; padding: 10px 20px; text-decoration: none; color: #fff; background-color: #007bff; border-radius: 4px;">Truy c·∫≠p trang web c·ªßa ch√∫ng t√¥i</a>
        <p style="color: #666;">Tr√¢n tr·ªçng,</p>
        <p style="color: #666;">Man Closet</p>
    </div>
    `
}
export const sendMailPassword = async (name, email, password) => {
    let transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 587,
        secure: false,
        auth: {
            user: process.env.MAIL,
            pass: process.env.PASS,
        },
    });
    let info = await transporter.sendMail({

        from: "mancloset68@gmail.com",
        to: email,
        subject: "ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng",
        text: "Ch√†o b·∫°n, " + email,
        html: `${FormMailPasword(name, password)}`,
    });
}